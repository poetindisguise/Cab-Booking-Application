/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package uber;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.*;
import java.util.Random;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author NITJ
 */

public class RideDetails extends javax.swing.JFrame {
    Thread thread;
    static String amount,rat;
    
public int getRandomElement(List<Integer> list)
{
Random rand=new Random();
return list.get(rand.nextInt(list.size()));
}
    String u=Login.userid;
int flag=0;
    /** Creates new form RideDetails */
    public RideDetails() {
        initComponents();
        try{
        Class.forName("com.mysql.jdbc.Driver");
           Connection obj=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");
           if(Ride.mini==1)
           {
           String query="SELECT * FROM `mini` WHERE  CarNo = '"+(Ride.carno)+"'";
           PreparedStatement ps=(PreparedStatement) obj.prepareStatement(query);
           ResultSet rs=ps.executeQuery();
           if(rs.next())
           {
               no.setText(Ride.carno);
               name.setText(rs.getString(1));
               phno.setText(rs.getString(2));
               rating.setText(rs.getString(3));
               car.setText(rs.getString(5));
               
               fare.setText(String.valueOf(5*(Ride.d1))+" Rupess");
               dist.setText(String.valueOf((Ride.d1))+" Km");
               t.setText(String.valueOf(2*(Ride.d1))+" Minutes");
               dt.setText(String.valueOf(2*(Ride.d))+" Minutes");
               amount=String.valueOf(5*(Ride.d1));
               
               rat=rs.getString(3);
           }
           }
           else
           {
               String query="SELECT * FROM `xuv` WHERE  CarNo = '"+(Ride.carno)+"'";
           PreparedStatement ps=(PreparedStatement) obj.prepareStatement(query);
           ResultSet rs=ps.executeQuery();
           if(rs.next())
           {
               no.setText(Ride.carno);
               name.setText(rs.getString(1));
               phno.setText(rs.getString(2));
               rating.setText(rs.getString(3));
               car.setText(rs.getString(5));
               
               fare.setText(String.valueOf(7*(Ride.d1))+" Rupess");
               dist.setText(String.valueOf((Ride.d1))+" Km");
               t.setText(String.valueOf(2*(Ride.d1))+" Minutes");
               dt.setText(String.valueOf(2*(Ride.d))+" Minutes");
               amount=String.valueOf(7*(Ride.d1));
               
               rat=rs.getString(3);
           }
           }
           }catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error"+ex.getMessage());
       } 
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        no = new javax.swing.JLabel();
        car = new javax.swing.JLabel();
        phno = new javax.swing.JLabel();
        fare = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        dist = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rating = new javax.swing.JLabel();
        dt = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        t = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 650));
        setMinimumSize(new java.awt.Dimension(600, 650));
        setPreferredSize(new java.awt.Dimension(600, 650));
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name of Driver");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 30, 120, 40);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Car");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 120, 80, 40);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Car No.");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 70, 90, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Estimated fare");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 230, 130, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Estimated Distance to be travelled");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 330, 260, 40);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Phone No. of driver");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 180, 140, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Estimated time of travel");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 280, 170, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Please press confirm button to confirm your ride.");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(90, 500, 380, 30);

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(160, 550, 120, 40);

        name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(name);
        name.setBounds(220, 40, 150, 30);

        no.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(no);
        no.setBounds(220, 80, 130, 30);

        car.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(car);
        car.setBounds(210, 130, 120, 30);

        phno.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(phno);
        phno.setBounds(230, 180, 150, 30);

        fare.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(fare);
        fare.setBounds(180, 230, 140, 30);
        getContentPane().add(time);
        time.setBounds(230, 230, 140, 30);

        dist.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(dist);
        dist.setBounds(300, 340, 100, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Driver Rating");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 390, 150, 30);

        rating.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(rating);
        rating.setBounds(120, 390, 100, 30);

        dt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dt.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(dt);
        dt.setBounds(310, 440, 70, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Driver will be arriving in ");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(140, 440, 170, 30);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(360, 550, 90, 30);

        t.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(t);
        t.setBounds(230, 280, 110, 30);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uber/resize-1573673810611786435images8.jpg"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(0, 0, 600, 660);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            int n1=0;
            if(Ride.mini==1)
            {
        Class.forName("com.mysql.jdbc.Driver");
        java.sql.Connection obj=(java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");
           String query="SELECT * FROM `users` WHERE UserId= '"+u+"'";
           PreparedStatement ps=(PreparedStatement) obj.prepareStatement(query);
           ResultSet rs=ps.executeQuery();
           
           String query1="UPDATE `users` SET `Wallet`=? WHERE UserId= '"+u+"'";
           PreparedStatement ps1=(PreparedStatement) obj.prepareStatement(query1);
           //ResultSet rs1=ps1.executeQuery();
           if(rs.next())
           {
            n1=Integer.parseInt(rs.getString(6));
           }
           ps1.setString(1,String.valueOf(n1-5*Ride.d1));
           //ps.setString(1,String.valueOf(n1+n2));
            ps1.executeUpdate();
            
            String query2="UPDATE `mini` SET `CurrentLocation`=?,`LastDropOff`=? WHERE Carno= '"+Ride.carno+"'";
           PreparedStatement ps2=(PreparedStatement) obj.prepareStatement(query2);
           
           String query3="UPDATE `users` SET `LastBooking`=? WHERE UserId= '"+u+"'";
           PreparedStatement ps3=(PreparedStatement) obj.prepareStatement(query3);
           ps2.setString(1,Ride.dr);
           int h=Ride.n1;
           int h1=2*Ride.d+2*Ride.d1;
           if(h1>60)
           {
               h1=h1-60;
               h=h+10000;
           }
           h=h+100*h1;
           int g=h%10000;
           if(g>6000)
               h=h+4000;
           g=h%1000000;
           if(g>240000)
               h=h+760000;
           ps2.setInt(2,h);
           ps3.setInt(1,h);
           ps2.executeUpdate();
           ps3.executeUpdate();
           
           List<Integer> list=new ArrayList<>();
            list.add(10);
            list.add(20);
            list.add(30);
            list.add(25);
            list.add(15);
            list.add(40);
            list.add(47);
            list.add(50);
            list.add(22);
            list.add(6);
            list.add(59);
            list.add(69);
            RideDetails o1=new RideDetails();
            //System.out.print(o1.getRandomElement(list));
            //System.out.print(o1.getRandomElement(list));
            //Connection obj=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");
            String query7="SELECT * FROM `mini` ";
           PreparedStatement ps7=(PreparedStatement) obj.prepareStatement(query7);
           ResultSet s=ps7.executeQuery();
            while(s.next())
            {
                int k1=o1.getRandomElement(list);
                if(s.getInt(8)==0)
                {
                    if(s.getInt(7)<Ride.n1)
                    {
                        String query8="SELECT * FROM `locations` WHERE Points= '"+String.valueOf(k1)+"'";
           PreparedStatement ps8=(PreparedStatement) obj.prepareStatement(query8);
           ResultSet rs8=ps8.executeQuery();
           if(rs8.next())
           {
           String query9="UPDATE `mini` SET `CurrentLocation`=? WHERE CarNo= '"+s.getString(4)+"'";
           PreparedStatement ps9=(PreparedStatement) obj.prepareStatement(query9);
           ps9.setString(1,rs8.getString(1));
           ps9.executeUpdate();
           }
                    }
                }
            }
             new last().setVisible(true);
            int time1=2*Ride.d+2*Ride.d1;
            try{
                TimeUnit.SECONDS.sleep(5);
                //System.out.println("Hello");
                new feedback().setVisible(true);
                new last().setVisible(false);
            }
            catch(Exception e)
            {
                
            }
       //timer(time1);
       //this.setVisible(false);
       //new last().setVisible(false);
            }
            else
            {
                Class.forName("com.mysql.jdbc.Driver");
        java.sql.Connection obj=(java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");
           String query="SELECT * FROM `users` WHERE UserId= '"+u+"'";
           PreparedStatement ps=(PreparedStatement) obj.prepareStatement(query);
           ResultSet rs=ps.executeQuery();
           
           String query1="UPDATE `users` SET `Wallet`=? WHERE UserId= '"+u+"'";
           PreparedStatement ps1=(PreparedStatement) obj.prepareStatement(query1);
           //ResultSet rs1=ps1.executeQuery();
           if(rs.next())
           {
            n1=Integer.parseInt(rs.getString(6));
           }
           ps1.setString(1,String.valueOf(n1-5*Ride.d1));
           //ps.setString(1,String.valueOf(n1+n2));
            ps1.executeUpdate();
            
            String query2="UPDATE `xuv` SET `CurrentLocation`=?,`LastDropOff`=? WHERE Carno= '"+Ride.carno+"'";
           PreparedStatement ps2=(PreparedStatement) obj.prepareStatement(query2);
           
           String query3="UPDATE `users` SET `LastBooking`=? WHERE UserId= '"+u+"'";
           PreparedStatement ps3=(PreparedStatement) obj.prepareStatement(query3);
           ps2.setString(1,Ride.dr);
           int h=Ride.n1;
           int h1=2*Ride.d+2*Ride.d1;
           if(h1>60)
           {
               h1=h1-60;
               h=h+10000;
           }
           h=h+100*h1;
           int g=h%10000;
           if(g>6000)
               h=h+4000;
           g=h%1000000;
           if(g>240000)
               h=h+760000;
           ps2.setInt(2,h);
           ps3.setInt(1,h);
           ps2.executeUpdate();
           ps3.executeUpdate();
           
           List<Integer> list=new ArrayList<>();
            list.add(10);
            list.add(20);
            list.add(30);
            list.add(25);
            list.add(15);
            list.add(40);
            list.add(47);
            list.add(50);
            list.add(22);
            list.add(6);
            list.add(59);
            list.add(69);
            RideDetails o1=new RideDetails();
            //System.out.print(o1.getRandomElement(list));
            //System.out.print(o1.getRandomElement(list));
            //Connection obj=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");
            String query10="SELECT * FROM `xuv` ";
           PreparedStatement ps10=(PreparedStatement) obj.prepareStatement(query10);
           ResultSet s=ps10.executeQuery();
            while(s.next())
            {
                int k1=o1.getRandomElement(list);
                if(s.getInt(8)==0)
                {
                    if(s.getInt(7)<Ride.n1)
                    {
                        String query11="SELECT * FROM `locations` WHERE Points= '"+String.valueOf(k1)+"'";
           PreparedStatement ps11=(PreparedStatement) obj.prepareStatement(query11);
           ResultSet rs11=ps11.executeQuery();
           if(rs11.next())
           {
           String query12="UPDATE `xuv` SET `CurrentLocation`=? WHERE CarNo= '"+s.getString(4)+"'";
           PreparedStatement ps12=(PreparedStatement) obj.prepareStatement(query12);
           ps12.setString(1,rs11.getString(1));
           ps12.executeUpdate();
           }
                    }
                }
            }
            int time1=2*Ride.d+2*Ride.d1;
           // System.out.println(time1);
       //timer(time1);
       new last().setVisible(true);
            
            try{
                TimeUnit.SECONDS.sleep(5);
                //System.out.println("Hello");
                new feedback().setVisible(true);
                new last().setVisible(false);
            }
            catch(Exception e)
            {
                
            }
       
       
       
            }
            if(flag==0)
            {
            new last().setVisible(true);
            flag=1;
            }
            
            
            
            
           }
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error"+ex.getMessage());
       }     
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    public void timer(int time){
    thread=new Thread(new Runnable(){
        @Override
        public void run() {
            
            for(int i=time;i>=0;i--)
            {
              //editText.setText(""+i);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    
                }
            }
            /*try{
                
            
            if(Ride.mini==0)
            {
                Class.forName("com.mysql.jdbc.Driver");
        java.sql.Connection obj=(java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");

            String query14="UPDATE `xuv` SET `flag`=? WHERE CarNo= '"+no.getText()+"'";
           PreparedStatement ps14=(PreparedStatement) obj.prepareStatement(query14);
           ps14.setInt(1,0);
           ps14.executeUpdate();
            }
            if(Ride.mini==1)
            {
                Class.forName("com.mysql.jdbc.Driver");
        java.sql.Connection obj=(java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");

            String query14="UPDATE `mini` SET `flag`=? WHERE CarNo= '"+no.getText()+"'";
           PreparedStatement ps14=(PreparedStatement) obj.prepareStatement(query14);
           ps14.setInt(1,0);
           ps14.executeUpdate();
            }
            new last().setVisible(false);
             new feedback().setVisible(true);
            }
            catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error"+ex.getMessage());
             //this.setVisible(false);
        }*/
        }
        
    });
    
    thread.start();
   this.setVisible(false);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
this.setVisible(false);
new Ride().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RideDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RideDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RideDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RideDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RideDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel car;
    private javax.swing.JLabel dist;
    private javax.swing.JLabel dt;
    private javax.swing.JLabel fare;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel name;
    private javax.swing.JLabel no;
    private javax.swing.JLabel phno;
    private javax.swing.JLabel rating;
    private javax.swing.JLabel t;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables

}
