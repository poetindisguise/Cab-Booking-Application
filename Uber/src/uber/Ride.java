/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uber;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
//import java.sql.Date;
import java.util.Date;
import java.text.ParseException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;  
import java.util.logging.Level;
import java.util.logging.Logger;
  
/**
 *
 * @author NITJ
 */
public class Ride extends javax.swing.JFrame {
static String carno,dr;
static int d=1000,d1,mini=0,d2,n1;
String[] st=new String[]{"Select","Banjara Hills","Jubilee Hills","Airport","Bus Stand","Railway Station","Hi Tech City","Karkhana","Bits Pilani","Film City","Char Minar","Gachibowli","Birla Memorial"};
String p,q;    
/**
     * Creates new form Ride
     */
    public Ride() {
        //System.out.println("Hello");
        //int h=d*2000;
        //JOptionPane.showMessageDialog(rootPane,"Error");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        pickup = new javax.swing.JComboBox<>();
        dropoff = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 500));
        setMinimumSize(new java.awt.Dimension(600, 500));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Pick-up Point");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 40, 140, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Drop-off Point");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 110, 130, 40);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Mini");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(50, 210, 70, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("SUV");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(260, 210, 100, 30);

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(475, 390, 70, 30);

        pickup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Banjara Hills", "Jubilee Hills", "Airport", "Bus Stand", "Railway Station", "Hi Tech City", "Karkhana", "Bits Pilani", "Film City", "Char Minar", "Gachibowli", "Birla Memorial" }));
        pickup.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pickupItemStateChanged(evt);
            }
        });
        pickup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickupActionPerformed(evt);
            }
        });
        getContentPane().add(pickup);
        pickup.setBounds(200, 50, 130, 20);

        dropoff.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Banjara Hills", "Jubilee Hills", "Airport", "Bus Stand", "Railway Station", "Hi Tech City", "Karkhana", "Bits Pilani", "Film City", "Char Minar", "Gachibowli", "Birla Memorial", " " }));
        dropoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropoffActionPerformed(evt);
            }
        });
        getContentPane().add(dropoff);
        dropoff.setBounds(200, 110, 140, 20);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uber/im7.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, -50, 600, 550);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {  
            p=st[pickup.getSelectedIndex()];
            q=st[dropoff.getSelectedIndex()];
            if(p.equals("Select")||q.equals("Select"))
            {
                JOptionPane.showMessageDialog(rootPane,"Please select some location");
            }
            else if(p.equals(q))
                JOptionPane.showMessageDialog(rootPane,"Please select different locations");
            else
            {
            mini=1;
            int n2=0,k=0,z,x,y;
            String str1,str2;
            double r1=0,r2;
            dr=q;
            
           str1=p;
           Class.forName("com.mysql.jdbc.Driver");
           Connection obj=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");
           String query="SELECT * FROM `mini`";
           PreparedStatement ps=(PreparedStatement) obj.prepareStatement(query);   
           ResultSet s=ps.executeQuery();
           
           
           
          String query1="SELECT * FROM `locations` WHERE  Name = '"+p+"'";
           PreparedStatement ps1=(PreparedStatement) obj.prepareStatement(query1);
           ResultSet rs1=ps1.executeQuery();
           
           
           DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
           LocalDateTime now = LocalDateTime.now(); 
         //System.out.println(dtf.format(now));
         //System.out.print((dtf.format(now)).charAt(11));
          //System.out.println((dtf.format(now)).charAt(12));
         //dt.setText(dtf.format(now));
          n1=n1+((dtf.format(now)).charAt(8)-48)*10000000;
         n1=n1+((dtf.format(now)).charAt(9)-48)*1000000;
         n1=n1+((dtf.format(now)).charAt(11)-48)*100000;
         n1=n1+((dtf.format(now)).charAt(12)-48)*10000;
         n1=n1+((dtf.format(now)).charAt(14)-48)*1000;
         n1=n1+((dtf.format(now)).charAt(15)-48)*100;
         n1=n1+((dtf.format(now)).charAt(17)-48)*10;
         n1=n1+((dtf.format(now)).charAt(18)-48)*1;
         
             
          if(rs1.next())
          {
              z=rs1.getInt(2);
           while(s.next()){
                k=s.getInt(7);
                if(s.getInt(8)==0)
                {
                   
               if(n1>k)
               {
                   
                  str2=s.getString(6);
                  
                   String query2="SELECT * FROM `locations` WHERE  Name = '"+str2+"'";
           PreparedStatement ps2=(PreparedStatement) obj.prepareStatement(query2);
           ResultSet rs2=ps2.executeQuery();
                   
                 if(rs2.next())
                 {
                     y=rs2.getInt(2);
                     x=z-y;
                     if(x<0)
                         x=-x;
                     if(x<=d)
                     {
                         
                         if(x==d)
                         {
                              r2=Double.parseDouble(s.getString(3));
                              if(r2>r1)
                              {
                                  carno=s.getString(4);
                                  r1=r2;
                                  d2=z;
                              }
                         }
                         else
                         {
                         d=x;
                         carno=s.getString(4);
                         r1=Double.parseDouble(s.getString(3));
                         d2=z;
                         }
                     }
                 }
               }
           }
                   }
           String query6="UPDATE `mini` SET `flag`=? WHERE CarNo= '"+carno+"'";
           PreparedStatement ps6=(PreparedStatement) obj.prepareStatement(query6);
           ps6.setInt(1,1);
           ps6.executeUpdate();
           System.out.println(carno);
           String query3="SELECT * FROM `locations` WHERE  Name = '"+q+"'";
           PreparedStatement ps3=(PreparedStatement) obj.prepareStatement(query3);
           ResultSet rs3=ps3.executeQuery();
           if(rs3.next())
           {
               d1=rs3.getInt(2);
               d1=d1-z;
               if(d1<0)
                   d1=-d1;
           }
          }
          this.setVisible(false);
        new RideDetails().setVisible(true);
           } }catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error"+ex.getMessage());
       } 
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            mini=0;
            try {  
             p=st[pickup.getSelectedIndex()];
            q=st[dropoff.getSelectedIndex()];
            if(p.equals("Select")||q.equals("Select"))
            {
                JOptionPane.showMessageDialog(rootPane,"Please select some location");
            }
            else if(p.equals(q))
                JOptionPane.showMessageDialog(rootPane,"Please select different locations");
            else
            {
            int n2=0,k=0,z,x,y;
            String str1,str2;
            double r1=0,r2;
            dr=q;
            
           str1=p;
           Class.forName("com.mysql.jdbc.Driver");
           Connection obj=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/uber", "root", "");
           String query="SELECT * FROM `xuv`";
           PreparedStatement ps=(PreparedStatement) obj.prepareStatement(query);   
           ResultSet s=ps.executeQuery();
           
          String query1="SELECT * FROM `locations` WHERE  Name = '"+p+"'";
           PreparedStatement ps1=(PreparedStatement) obj.prepareStatement(query1);
           ResultSet rs1=ps1.executeQuery();
           
           
           DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
           LocalDateTime now = LocalDateTime.now(); 
         //System.out.println(dtf.format(now));
         //System.out.print((dtf.format(now)).charAt(11));
          //System.out.println((dtf.format(now)).charAt(12));
         //dt.setText(dtf.format(now));
          n1=n1+((dtf.format(now)).charAt(8)-48)*10000000;
         n1=n1+((dtf.format(now)).charAt(9)-48)*1000000;
         n1=n1+((dtf.format(now)).charAt(11)-48)*100000;
         n1=n1+((dtf.format(now)).charAt(12)-48)*10000;
         n1=n1+((dtf.format(now)).charAt(14)-48)*1000;
         n1=n1+((dtf.format(now)).charAt(15)-48)*100;
         n1=n1+((dtf.format(now)).charAt(17)-48)*10;
         n1=n1+((dtf.format(now)).charAt(18)-48)*1;
         
             
          if(rs1.next())
          {
              z=rs1.getInt(2);
           while(s.next()){
                k=s.getInt(7);
                if(s.getInt(8)==0)
                {
               if(n1>k)
               {
                   
                   
                  str2=s.getString(6);
                  
                   String query2="SELECT * FROM `locations` WHERE  Name = '"+str2+"'";
           PreparedStatement ps2=(PreparedStatement) obj.prepareStatement(query2);
           ResultSet rs2=ps2.executeQuery();
                   
                 if(rs2.next())
                 {
                     y=rs2.getInt(2);
                     x=z-y;
                     if(x<0)
                         x=-x;
                     if(x<=d)
                     {
                         
                         if(x==d)
                         {
                              r2=Double.parseDouble(s.getString(3));
                              if(r2>r1)
                              {
                                  carno=s.getString(4);
                                  r1=r2;
                                  d2=z;
                              }
                         }
                         else
                         {
                         d=x;
                         carno=s.getString(4);
                         r1=Double.parseDouble(s.getString(3));
                         d2=z;
                         }
                     }
                 }
               }
           }
               
                   }
           String query5="UPDATE `xuv` SET `flag`=? WHERE CarNo= '"+carno+"'";
           PreparedStatement ps5=(PreparedStatement) obj.prepareStatement(query5);
           ps5.setInt(1,1);
           ps5.executeUpdate();
           
           System.out.println(carno);
           String query3="SELECT * FROM `locations` WHERE  Name = '"+q+"'";
           PreparedStatement ps3=(PreparedStatement) obj.prepareStatement(query3);
           ResultSet rs3=ps3.executeQuery();
           if(rs3.next())
           {
               d1=rs3.getInt(2);
               d1=d1-z;
               if(d1<0)
                   d1=-d1;
           }
          }
          this.setVisible(false);
        new RideDetails().setVisible(true);
           } }catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error"+ex.getMessage());
       } 
        
            
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
this.setVisible(false);
            new Login1().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void pickupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickupActionPerformed
           // this.setVisible(true);                            // TODO add your handling code here:
    }//GEN-LAST:event_pickupActionPerformed

    private void pickupItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pickupItemStateChanged
                   //this.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_pickupItemStateChanged

    private void dropoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropoffActionPerformed
                  // this.setVisible(true);   // TODO add your handling code here:
    }//GEN-LAST:event_dropoffActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ride.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ride.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ride.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ride.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ride().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dropoff;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> pickup;
    // End of variables declaration//GEN-END:variables
}
